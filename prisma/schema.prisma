//! bomb

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
//!-------------------PROJECT-SMS------------------------------------------------------------

model UserManagement {
  IDUserOrAdmin        String    @id @default(uuid()) @db.Uuid
  //!Tab1
  UserName             String
  Password             String
  Pincode              String?
  UserLevel            String
  EffectiveDate        DateTime?
  ExpiredDate          DateTime?
  InvalidPasswordCount Int?
  SecretQuestion       String?
  Answer               String?
  Status               Boolean   @default(true)
  //!Tab2
  Title                String?
  FirstName            String?
  LastName             String?
  AbbreviateName       String?
  Email                String?   @unique
  Telephone            String?   @db.VarChar(10)
  CitiZenID            String?
  Picture              String?
  //!Tab3
  EmpNo                String?
  DeptCode             String?
  CompanyCode          String?
  OperationCode        String?
  SubOperationCode     String?
  CentralRefNo         String?
  BusinessType         String?
  DocIssueUnit         String?
  LockLocation         String?
  DeptFlag             String?
  GrpSubOperation      String?
  GrpOperationCode     String?
  //!Tab4
  DefaultLanguage      String?
  FontFamily           String?
  FontSize             Float?
  DateFormat           DateTime?
  TimeZone             DateTime?
  AmountFormat         Int?
  //!Standard
  CreatedAt            DateTime  @default(now())
  UpdatedAt            DateTime  @updatedAt

  smsManagement SmsManagement[] @relation("SmsManagements")

  tokenUser TokenUser[] @relation(name: "TokenUser")

  loggetsUser LoggetsUser[] @relation(name: "LoggetsUser")
}

model SmsManagement {
  SmsID         String    @id @default(uuid()) @db.Uuid
  IDUserOrAdmin String    @db.Uuid
  // IDUserOrAdmin String?
  Sender        String?
  Tel           String?
  Result        String?
  Contact       String?
  ScheduleDate  DateTime?
  Option        String?
  Description   String?   @default("${SmsManagement.Result}")
  //!Standard
  CreatedAt     DateTime  @default(now())
  UpdatedAt     DateTime  @updatedAt

  smsMessage SmsMessage[] @relation("Messages")

  userManagement UserManagement @relation(name: "SmsManagements", fields: [IDUserOrAdmin], references: [IDUserOrAdmin])
}

model SmsMessage {
  MessageID String   @id @default(uuid()) @db.Uuid
  SmsID     String   @db.Uuid
  Message   String?  @db.VarChar(255)
  //!Standard
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt

  smsManagement SmsManagement @relation(name: "Messages", fields: [SmsID], references: [SmsID])
}

model TokenUser {
  TokenID        String         @id @default(uuid()) @db.Uuid
  CreatedAt      DateTime       @default(now())
  UpdatedAt      DateTime       @updatedAt
  Expiration     DateTime
  IDUserOrAdmin         String         @db.Uuid
  TokenValue     String
  userManagement UserManagement @relation(name: "TokenUser", fields: [IDUserOrAdmin], references: [IDUserOrAdmin])
  // user User  @relation(name: "Token", fields: [UserID], references: [UserID], onDelete: Cascade)
}

model LoggetsUser {
  LoggetID      String   @id @default(uuid()) @db.Uuid
  CreatedAt     DateTime @default(now())
  UpdatedAt     DateTime @updatedAt
  IDUserOrAdmin String   @db.Uuid
  TypeLogger    String

  userManagement UserManagement @relation(name: "LoggetsUser", fields: [IDUserOrAdmin], references: [IDUserOrAdmin])
}
