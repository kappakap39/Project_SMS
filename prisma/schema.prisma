//! bomb

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//!-------------------PROJECT-SMS------------------------------------------------------------

model UserManagement {
  UserID String @id @default(uuid()) @db.Uuid

  //!Tab1
  Username      String    @db.VarChar(255)
  Password      String    @db.VarChar(255)
  Userlevel     String?   @db.VarChar(255)
  OTP           String?   @db.VarChar(6)
  OtpExpired    DateTime? @db.Timestamp()
  Effectivedate DateTime  @db.Date()
  Expireddate   DateTime  @db.Date()
  Question      String?   @db.VarChar(255)
  Answer        String?   @db.VarChar(255)
  Statused      Boolean   @default(true)

  //!Tab2
  Title          String  @db.VarChar(55)
  Firstname      String  @db.VarChar(255)
  Lastname       String  @db.VarChar(255)
  Abbreviatename String  @db.VarChar(255)
  Email          String  @unique @db.VarChar(255)
  Tel            String  @db.VarChar(10)
  CitiZenID      String  @db.VarChar(13)
  Picture        String? @db.VarChar(255)

  //!Tab3
  EmpNo        String? @db.VarChar(255)
  DeptCode     String? @db.VarChar(255)
  CompanyCode  String? @db.VarChar(255)
  BusinessType String? @db.VarChar(255)
  DocIssueUnit String? @db.VarChar(255)
  Inhabited    String? @db.VarChar(255)
  Province     String? @db.VarChar(255)
  District     String? @db.VarChar(255)
  Subdistrict  String? @db.VarChar(255)
  Zipcode      String? @db.VarChar(5)
  LockLocation String? @db.VarChar(255)

  Remove    Boolean  @default(false)
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt

  smsManagement SMSManagement[] @relation("SMSManagements")

  tokenUser TokenUser[] @relation(name: "TokenUser")

  log_History Log_History[] @relation(name: "LogHistory")
}

model SMSManagement {
  SMS_ID       String    @id @default(uuid()) @db.Uuid
  UserID       String    @db.Uuid
  Sender       String?
  Tel          String?
  Result       String?
  Contact      String?
  ScheduleDate DateTime?
  Option       String?
  Description  String?   @default("${SmsManagement.Result}")

  //!Standard
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt

  smsMessage SMSMessage[] @relation("Messages")

  userManagement UserManagement @relation(name: "SMSManagements", fields: [UserID], references: [UserID])

  log_Sent Log_Sent[] @relation(name: "SMS")
}

model SMSMessage {
  MessageID String   @id @default(uuid()) @db.Uuid
  SMS_ID    String   @db.Uuid
  Message   String?  @db.VarChar(255)
  //!Standard
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt

  smsManagement SMSManagement @relation(name: "Messages", fields: [SMS_ID], references: [SMS_ID], onDelete: Cascade)
}

model TokenUser {
  TokenID        String         @id @default(uuid()) @db.Uuid
  CreatedAt      DateTime       @default(now())
  UpdatedAt      DateTime       @updatedAt
  Expiration     DateTime
  UserID         String         @db.Uuid
  TokenValue     String
  userManagement UserManagement @relation(name: "TokenUser", fields: [UserID], references: [UserID])
  // user User  @relation(name: "Token", fields: [UserID], references: [UserID], onDelete: Cascade)
}

model Log_History {
  LoggetID   String   @id @default(uuid()) @db.Uuid
  CreatedAt  DateTime @default(now())
  UpdatedAt  DateTime @updatedAt
  UserID     String   @db.Uuid
  TypeLogger String

  userManagement UserManagement @relation(name: "LogHistory", fields: [UserID], references: [UserID])
}

model Log_Sent {
  LoggetID   String   @id @default(uuid()) @db.Uuid
  CreatedAt  DateTime @default(now())
  UpdatedAt  DateTime @updatedAt
  SMS_ID     String   @db.Uuid
  TypeLogger String
  DateLog    DateTime

  smsManagement SMSManagement @relation(name: "SMS", fields: [SMS_ID], references: [SMS_ID])
}

model AllFile {
  ImgID        String   @id @default(uuid()) @db.Uuid
  Ref_ID       String
  CreatedAt    DateTime @default(now())
  UpdatedAt    DateTime @updatedAt
  FileName     String   @unique
  OriginalName String
  FilePath     String
  FileKey      String
  Mimetype     String
  FileSize     String
}

model Department {
  DeptID    String   @id @default(uuid()) @db.Uuid
  DeptName  String   @db.VarChar(255)
  DeptCode  String   @db.VarChar(255)
  Remove    Boolean  @default(false)
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt
}

model Company {
  CompanyID   String   @id @default(uuid()) @db.Uuid
  CompanyName String   @db.VarChar(255)
  CompanyCode String   @db.VarChar(255)
  Remove      Boolean  @default(false)
  CreatedAt   DateTime @default(now())
  UpdatedAt   DateTime @updatedAt
}
